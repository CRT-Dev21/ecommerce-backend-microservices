spring.application.name=STOCK-SERVICE

server.port=8082

#Configuration for kafka server
spring.kafka.bootstrap-servers=kafka:9092

#Configuration of the consumer
spring.kafka.consumer.group-id=stock
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Configuration of the producer
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#Configuration for topics in kafka
spring.kafka.topic.name.order.created=order-created-topic
spring.kafka.topic.name.stock=stock-reserved-topic

#Configuration for the database
spring.r2dbc.url=r2dbc:postgresql://stock-db:5432/stock_db
spring.r2dbc.username=postgres
spring.r2dbc.password=postgreuser
spring.r2dbc.pool.enabled=true

#Configuration for images
file.upload-dir=./uploads/products/
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

jwt.secret=RXN0YUVzTGFDbGF2ZVNlY3JldGFQYXJhTWlQcm95ZWN0b0RlRUNvbW1lcmNl

#Eureka Client Configuration
eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true

#For faster detection
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10