spring.application.name=ORDER-SERVICE

server.port=8081

#Configuration for kafka server
spring.kafka.bootstrap-servers=kafka:9092

#Configuration of the producer
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#Configuration of the consumer
spring.kafka.consumer.group-id=order
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Topics in kafka
spring.kafka.topic.name.order=order-created-topic
spring.kafka.topic.name.stock=stock-reserved-topic
spring.kafka.topic.name.order.confirmed=order-confirmed-topic

#Connection configuration to the database
spring.datasource.url=jdbc:postgresql://order-db:5432/order_db
spring.datasource.username=postgres
spring.datasource.password=postgreuser
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Configuration for security with JWT
jwt.secret=RXN0YUVzTGFDbGF2ZVNlY3JldGFQYXJhTWlQcm95ZWN0b0RlRUNvbW1lcmNl
jwt.expiration=86400000

#Eureka Client Configuration
eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true

#For faster detection
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10